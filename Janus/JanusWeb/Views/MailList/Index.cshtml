@model JanusWeb.Models.MailList
@using System.Text.Encodings.Web

<style>
    .row-full-height {
        height: 100%;
    }

    #emailList {
        height: 100%;
        overflow-y: auto;
    }

    #contentArea {
        width: 100%;
        height: 100%;
        resize: none;
        overflow-y: auto;
    }

    .newMailButton{
        width: 100%;
        border-radius: 0px;
    }

    .allignRight {
        margin-left: 1rem;
    }

    .biiig{
        width: 100%;
    }

    .tab-btn {
        background-color: #007bff;
        color: #fff;
        padding: 8px 20px;
        border: none;
        border-radius: 1rem 1rem 0 0;
        position: relative;
        margin-right: -1rem;
        z-index: 1;
        overflow: hidden;
    }

    /* Apply trapezoidal effect with rounded corners */
    .tab-1 {
        clip-path: polygon(10% 0%, 90% 0%, 100% 100%, 0% 100%);
    }

    .tab-2 {
        clip-path: polygon(15% 0%, 85% 0%, 100% 100%, 0% 100%);
    }

    .tab-3 {
        clip-path: polygon(5% 0%, 95% 0%, 100% 100%, 0% 100%);
    }

    .tab-btn:hover, .tab-btn:focus {
        background-color: #0056b3;
        color: #fff;
    }

    .tab-btn:after {
        content: "";
        position: absolute;
        bottom: -4px; /* Align with the text area */
        left: 0;
        right: 0;
        height: 4px;
        background-color: #007bff;
        z-index: -1;
    }

</style>

<div class="row row-full-height">
    <div class="col-2 d-flex flex-column p-0">
        @* Display an error message if there is one *@
        @if (ViewBag.Error != null)
        {
            <div class="error-message">
                @Html.Encode(ViewBag.Error)
            </div>
        }
        <div>
            <button class="btn btn-primary newMailButton" onclick="location.href='@Url.Action("Index", "MailCreator")'">neue mail</button>
        </div>

        <div class="list-group" id="emailList">
            @foreach (var email in Model.EmailList)
            {
                <a href="#" class="list-group-item list-group-item-action"
                   onclick="selectEmail('@(JavaScriptEncoder.Default.Encode(email.Content ?? ""))', 
                   '@(JavaScriptEncoder.Default.Encode(email.Vcs ?? ""))', 
                   '@(JavaScriptEncoder.Default.Encode(email.OriginalMail ?? ""))')">
                    @email.Subject
                </a>
            }
        </div>
    </div>
    <div class="col-10 d-flex flex-column p-0">
        <div class="form-group row allignRight">
            <div class="col-auto">
                <button class="tab-btn btn tab-1" onclick="showDecryptedMailContent()">Content</button>
            </div>
            <div class="col-auto">
                <button class="tab-btn btn tab-2" onclick="showVCs()">VCs</button>
            </div>
            <div class="col-auto">
                <button class="tab-btn btn tab-3" onclick="showOriginalMail()">Original Mail</button>
            </div>
        </div>
        <textarea id="contentArea" class="form-control" readonly></textarea>
    </div>
</div>

<script>
    let currentContent = '';
    let currentVCs = '';
    let currentOriginalMail = '';

    function selectEmail(content, vcs, originalMail) {
        // Set the content, VCs, and OriginalMail of the selected email
        console.log("this things got passed:" , content, vcs, originalMail)
        currentContent = content;
        currentVCs = vcs;
        currentOriginalMail = originalMail;

        showContent(currentContent);
    }

    function showContent(content) {
        document.getElementById('contentArea').value = content;
    }

    function showDecryptedMailContent() {
        showContent(currentContent);
    }

    function showVCs() {
        showContent(currentVCs);
    }

    function showOriginalMail() {
        showContent(currentOriginalMail);
    }
</script>
